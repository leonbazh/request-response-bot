import telebot
from telebot import types
import filterx
import datetime
import aiogram


token = ''

bot = telebot.TeleBot(token)

date = ""
name = ""
phone = ""
time = ""
zone = ""
count = ""

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å")
    item2 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–æ–Ω—ã")
    markup.add(item1, item2)
    bot.send_photo(message.from_user.id, 'https://sun9-32.userapi.com/impg/UZOK2C_1V9wW35duluOe6qzd-Cvylq6b7Adx7A/l03lNyuSbi0.jpg?size=1080x1080&quality=95&sign=5dd987c7fe760a8d8533915e3f26c211&type=album')
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è. –Ø –±–æ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∫–ª—É–±–∞ CyberX Community. –•–æ—Ç–µ–ª–∏ –±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ?", reply_markup=markup)



@bot.message_handler(content_types='text')
def reserve_message(message):
    if message.text == '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è. –ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω", reply_markup=markup)
        bot.register_next_step_handler(message, get_name)
    if message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–æ–Ω—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å')
        markup.add(item1)
        media =  ['https://cloud.mail.ru/public/Gv1J/feTWLvRyE','https://cloud.mail.ru/public/RGoS/LB1KmbKsP','https://cloud.mail.ru/public/28Vv/vfquKer5u' , 'https://cloud.mail.ru/public/Md3g/yh83Y66ZE']
        media1 = [types.InputMediaPhoto(photo) for photo in media]
        bot.send_media_group(message.from_user.id, media1)
        bot.send_message(message.from_user.id, "–ö –≤–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é 4 –∑–æ–Ω—ã: Standart, BootCamp, VIP, Lounge", reply_markup=markup)
    

def get_name(message):
    global name
    flag = filterx.filter_bad_words(message.text)
    if flag == True:
        name = message.text
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ —Ñ–æ—Ä–º–µ: +79*********")
        bot.register_next_step_handler(message, get_number)
    else:
        bot.send_message(message.from_user.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å–≤–æ–µ –∏–º—è")
        bot.register_next_step_handler(message, get_name)

def get_number(message):
    global phone
    flag = filterx.filter_number(message.text)
    if flag == True:
        phone = message.text
        now = datetime.datetime.now()
        formatted_date = now.strftime("%d.%m")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton(formatted_date)
        markup.add(item1)
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–∏–¥—Ç–∏ –ø–æ —Ñ–æ—Ä–º–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: {}".format(formatted_date), reply_markup=markup)
        bot.register_next_step_handler(message, get_date)
    else:
        bot.send_message(message.from_user.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏ –ø–æ —Ñ–æ—Ä–º–µ")
        bot.register_next_step_handler(message, get_number)
        

def get_date(message):
    global date
    flag = filterx.filter_date(message.text)
    if flag == True:
        date = message.text
        now = datetime.datetime.now()
        hour = now.strftime("%H")
        minute = now.strftime("%M")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        if int(hour) == 23 and int(minute) < 30:
            item1 = types.KeyboardButton(f"00:00")
        elif int(hour) == 23 and int(minute) >= 30:
            item1 = types.KeyboardButton(f"00:30")
        elif int(hour) + 1 < 10 and int(minute) < 30:
            item1 = types.KeyboardButton(f"0{int(hour)+1}:00")
        elif int(hour) + 1 < 10 and int(minute) >= 30:
            item1 = types.KeyboardButton(f"0{int(hour)+1}:30")
        elif int(hour) + 1 >=10 and int(minute) >= 30:
            item1 = types.KeyboardButton(f"{int(hour)+1}:30")
        else:
            item1 = types.KeyboardButton(f"{int(hour)+1}:00")
        markup.add(item1)
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∫–æ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–∏–¥—Ç–∏ –ø–æ —Ñ–æ—Ä–º–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: 09:30", reply_markup=markup)
        bot.register_next_step_handler(message, get_time)
    else:
        bot.send_message(message.from_user.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ —Ñ–æ—Ä–º–µ")
        bot.register_next_step_handler(message, get_date)


def get_time(message):
    global time, date
    flag = filterx.filter_time(message.text, date)
    if flag == True:
        time = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('Standart')
        item2 = types.KeyboardButton('Bootcamp')
        item3 = types.KeyboardButton('VIP')
        item4 = types.KeyboardButton('Lounge')
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤ –∫–∞–∫–æ–π –∑–æ–Ω–µ —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', reply_markup=markup)
        bot.register_next_step_handler(message, get_zone)
    else:
        bot.send_message(message.from_user.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –≤—Ä–µ–º—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ —Ñ–æ—Ä–º–µ")
        bot.register_next_step_handler(message, get_time)
        
def get_zone(message):
    global zone
    zones = ['Standart', 'Bootcamp', 'VIP', 'Lounge']
    if not message.text in(zones):
        bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ')
        bot.register_next_step_handler(message, get_zone)
    else:
        zone = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('1')
        item2 = types.KeyboardButton('3')
        item3 = types.KeyboardButton('5')
        markup.add(item1, item2, item3)
        bot.send_message(message.from_user.id, '–£–∫–∞–∂–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ –±—Ä–æ–Ω—å', reply_markup=markup)
        bot.register_next_step_handler(message, get_count)

def get_count(message):
    global count
    flag = filterx.filter_count(message.text)
    if flag == True:
        count = message.text
        get_total(message)
    else:
        bot.send_message(message.from_user.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        bot.register_next_step_handler(message, get_count)
    
def get_total(message):
    global time, name, date, phone, zone, count
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å")
    item2 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–æ–Ω—ã")
    markup.add(item1, item2)
    bot.send_message(message.from_user.id, f'''–í–∞—à–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {name} {phone}
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {date} {time}''')
    bot.send_message(message.from_user.id, '''–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ üòÅ
–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã üëå. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å" –Ω–∏–∂–µ üëá''', reply_markup=markup)
    bot.send_message('7037710515', f'''–ò–º—è: {name}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}
–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –±—Ä–æ–Ω–∏: {date} {time}
–ó–æ–Ω–∞: {zone}
–ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫: {count}''')
bot.infinity_polling()
